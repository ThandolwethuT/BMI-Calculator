<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AmNCfgrtY4//2Q==
</value>
  </data>
</root>